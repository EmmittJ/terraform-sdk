variable "aws_region" {
  description = "AWS region to deploy to"
  type = string
  default = "us-east-1"
}

variable "base_cidr_block" {
  description = "A /16 CIDR range definition, such as 10.1.0.0/16, that the VPC will use"
  type = string
  default = "10.1.0.0/16"
}

variable "availability_zones" {
  description = "A list of availability zones in which to create subnets"
  type = list(string)
}

locals {
  common_tags = {
    Environment = local.environment
    ManagedBy = "Terraform"
    Project = local.project_name
  }
  environment = "production"
  project_name = "example-vpc"
}

provider "aws" {
  default_tags {
    tags = local.common_tags
  }
  region = var.aws_region
}

resource "aws_vpc" "main" {
  cidr_block = var.base_cidr_block
  enable_dns_hostnames = true
  enable_dns_support = true
  tags = merge(local.common_tags, {
    Name = "${local.project_name}-vpc"
  })
}

resource "aws_internet_gateway" "main" {
  tags = merge(local.common_tags, {
    Name = "${local.project_name}-igw"
  })
  vpc_id = aws_vpc.main.id
}

resource "aws_subnet" "public" {
  availability_zone = each.value
  cidr_block = cidrsubnet(var.base_cidr_block, 4, index(var.availability_zones, each.value) + 1)
  for_each = toset(var.availability_zones)
  map_public_ip_on_launch = true
  tags = merge(local.common_tags, {
    Name = "${local.project_name}-public-${each.value}"
    Tier = "Public"
  })
  vpc_id = aws_vpc.main.id
}

output "vpc_id" {
  value = aws_vpc.main.id
  description = "The ID of the VPC"
}

output "subnet_ids" {
  value = { for az, subnet in aws_subnet.public : az => subnet.id }
  description = "Map of subnet IDs by availability zone"
}

